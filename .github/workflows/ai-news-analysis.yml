name: Patriots Protocol - Real AI Intelligence v4.0

on:
  schedule:
    # Run every 6 hours to respect rate limits
    - cron: '0 */6 * * *'
  workflow_dispatch:
  push:
    branches: ["main"]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  real-ai-intelligence:
    runs-on: ubuntu-latest
    outputs:
      total_articles: ${{ steps.analysis.outputs.total_articles }}
      success_rate: ${{ steps.analysis.outputs.success_rate }}
      system_status: ${{ steps.analysis.outputs.system_status }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install aiohttp feedparser openai

      - name: Run Real AI Analysis
        id: analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🎖️  PATRIOTS PROTOCOL v4.0 - Real AI Intelligence Starting..."
          echo "📅 Mission Time: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # Run the real AI analysis
          python patriots_ai_intel_real.py
          
          # Extract metrics from generated data (only if file exists)
          if [ -f ./data/news-analysis.json ]; then
            echo "✅ Real intelligence data generated successfully"
            
            python3 -c "
          import json
          import os
          
          try:
              with open('./data/news-analysis.json', 'r') as f:
                  data = json.load(f)
              
              metrics = data.get('metrics', {})
              system_info = data.get('system_info', {})
              
              total_articles = metrics.get('total_articles', 0)
              success_rate = system_info.get('success_rate', '0/0')
              system_status = metrics.get('system_status', 'UNKNOWN')
              
              print(f'📊 Real Articles Processed: {total_articles}')
              print(f'📈 Success Rate: {success_rate}')
              print(f'⚡ System Status: {system_status}')
              
              # Set GitHub Actions outputs
              with open(os.environ['GITHUB_OUTPUT'], 'a') as gh_output:
                  gh_output.write(f'total_articles={total_articles}\\n')
                  gh_output.write(f'success_rate={success_rate}\\n')
                  gh_output.write(f'system_status={system_status}\\n')
                  
          except Exception as e:
              print(f'❌ Error processing real data: {e}')
              # Set failure outputs
              with open(os.environ['GITHUB_OUTPUT'], 'a') as gh_output:
                  gh_output.write('total_articles=0\\n')
                  gh_output.write('success_rate=0/0\\n')
                  gh_output.write('system_status=FAILED\\n')
          "
          else
            echo "❌ No real data generated - check logs for issues"
            echo "total_articles=0" >> $GITHUB_OUTPUT
            echo "success_rate=0/0" >> $GITHUB_OUTPUT
            echo "system_status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Validate Real Data
        run: |
          if [ -f ./data/news-analysis.json ]; then
            echo "🔍 Validating real intelligence data..."
            
            python3 -c "
          import json
          import sys
          
          try:
              with open('./data/news-analysis.json', 'r') as f:
                  data = json.load(f)
              
              articles = data.get('articles', [])
              metrics = data.get('metrics', {})
              
              if not articles:
                  print('❌ No real articles found in data')
                  sys.exit(1)
              
              # Check for real AI analysis
              analyzed_count = 0
              for article in articles:
                  if article.get('ai_analysis') and len(article['ai_analysis']) > 20:
                      analyzed_count += 1
              
              print(f'✅ Real data validation passed')
              print(f'📊 Articles: {len(articles)}')
              print(f'🤖 AI Analyzed: {analyzed_count}')
              print(f'🎯 Success Rate: {analyzed_count}/{len(articles)}')
              
              if analyzed_count == 0:
                  print('⚠️  Warning: No articles have real AI analysis')
                  
          except Exception as e:
              print(f'❌ Validation failed: {e}')
              sys.exit(1)
          "
          else
            echo "❌ No data file to validate"
            exit 1
          fi

      - name: Commit Real Data
        run: |
          if [ -f ./data/news-analysis.json ]; then
            git config --local user.email "patriots-protocol@real.ai"
            git config --local user.name "Patriots Protocol Real AI"
            
            git add data/news-analysis.json
            
            if git diff --staged --quiet; then
              echo "📋 No changes to commit"
            else
              COMMIT_MSG="🎖️  Patriots Protocol v4.0: Real AI Intelligence Update"
              COMMIT_MSG="$COMMIT_MSG\n\n📅 Mission Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
              COMMIT_MSG="$COMMIT_MSG\n🎯 Real Articles: ${{ steps.analysis.outputs.total_articles }}"
              COMMIT_MSG="$COMMIT_MSG\n📈 Success Rate: ${{ steps.analysis.outputs.success_rate }}"
              COMMIT_MSG="$COMMIT_MSG\n⚡ Status: ${{ steps.analysis.outputs.system_status }}"
              COMMIT_MSG="$COMMIT_MSG\n\n🚫 No fake data - Real AI analysis only"
              
              echo -e "$COMMIT_MSG" > commit_message.txt
              git commit -F commit_message.txt
              git push
              echo "✅ Real intelligence data committed"
            fi
          else
            echo "❌ No real data to commit"
          fi

  deploy-real-site:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: real-ai-intelligence
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Validate Site
        run: |
          if [ -f "index.html" ]; then
            echo "✅ index.html found"
            
            if [ -f "data/news-analysis.json" ]; then
              echo "✅ Real data file exists"
              
              # Check if data is real (not fallback)
              python3 -c "
              import json
              
              with open('data/news-analysis.json', 'r') as f:
                  data = json.load(f)
              
              articles = data.get('articles', [])
              if articles:
                  print(f'✅ Site ready with {len(articles)} real articles')
              else:
                  print('⚠️  Site deploying with no articles')
              "
            else
              echo "⚠️  No data file found - site will show empty state"
            fi
          else
            echo "❌ index.html missing"
            exit 1
          fi

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment Summary
        run: |
          echo "🎖️  PATRIOTS PROTOCOL v4.0 - REAL AI DEPLOYMENT"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📊 Real Articles: ${{ needs.real-ai-intelligence.outputs.total_articles }}"
          echo "📈 Success Rate: ${{ needs.real-ai-intelligence.outputs.success_rate }}"
          echo "⚡ Status: ${{ needs.real-ai-intelligence.outputs.system_status }}"
          echo "🚫 No fake data - Real intelligence only"

  mission-summary:
    runs-on: ubuntu-latest
    needs: [real-ai-intelligence, deploy-real-site]
    if: always()
    steps:
      - name: Real Mission Summary
        run: |
          echo "🎖️  PATRIOTS PROTOCOL v4.0 - REAL AI MISSION COMPLETE"
          echo "📅 Mission Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          echo "🤖 AI Analysis: ${{ needs.real-ai-intelligence.result }}"
          echo "🌐 Deployment: ${{ needs.deploy-real-site.result }}"
          echo "📊 Real Articles: ${{ needs.real-ai-intelligence.outputs.total_articles }}"
          echo "📈 Success Rate: ${{ needs.real-ai-intelligence.outputs.success_rate }}"
          echo "⚡ Final Status: ${{ needs.real-ai-intelligence.outputs.system_status }}"
          echo "🚫 NO FAKE DATA GENERATED"
          echo "✅ Real AI intelligence only"
